{
    "contents" : "---\ntitle: \"Bootcamp Exercise 1\"\nauthor: \"M. Vaz\"\ndate: \"Wednesday, September 16, 2015\"\noutput: html_document\n---\n\n### 1) Write a for loop statement so that it runs from 1:9 and prints the following output to your screen\n```{r}\nfor(i in 1:9){if(i==9){cat('*')}else{cat('\\n')}}\n```\n\n### 2) Modify your for loop so that it prints 10 asterisks, with each asterisk separated by exactly one ampersand sign (&), with no spaces or new line characters.\n```{r}\nfor(i in 1:9){if(i==9){cat('*')}else{cat('*&')}}\n```\n\n### 3) by hand, figure out the initial values of these variables and values at the the start and end of each iteration of the loop\n```{r}\n#initial dogs = 10; final dogs = 15\n#i=1 -> d=10+1=11\n#i=2 -> d=11+1=12\n#i=3 -> d=12+1=13\n#i=4 -> d=13+1=14\n#i=5 -> d=14+1=15\n\n#initial meatloaf = 0; final meatloaf = -30\n#i=5 -> m=0-5+1=-4\n#i=6 -> m=-4-5+1=-9\n#i=7 -> m=-9-7+1=-15\n#i=8 -> m=-15-8+1=-22\n#i=9 -> m=-22-9+1=-30\n\n#initial bubbles = 12; final bubbles = \n#i=-1 -> b=-1\n#i=-2 -> b=-2\n#i=-3 -> b=-3\n#i=-4 -> b=-4\n```\n\n### 4) modify this code so that it will print out a message during presidential as well as congressional election years\n```{r}\nyears <- c( 2015, 2016, 2018, 2020, 2021)\nfor(ii in 1:length(years)){\n  if(years[ii] %% 2 == 0){\n    cat(years[ii], 'Hooray, congressional elections!', sep = '\\t', fill = T)\n  } \n  if(years[ii] %% 4 == 0){\n    cat(years[ii], 'Presidential elections!', sep = '\\t', fill = T)\n  } \n}\n```\n\n### 5) More fun with loops. Here are the bank accounts from seven randomly selected UCLA grad students\n```{r}\nbankAccounts <- c(10, 9.2, 5.6, 3.7, 8.8, 0.5);\ninterestRate <- 0.0125;\ncompounded = numeric()\nfor (i in 1:length(bankAccounts)) {\n  compounded[i] <- interestRate*bankAccounts[i] + bankAccounts[i]; }\ncompounded\n```\n\n### 6) Go back to the compounded interest example. Suppose we now want to compound the interest annually, but across a period of 5 years. The for loop we discussed earlier only compounds for a single year.\n```{r}\nbankAccounts <- c(10, 9.2, 5.6); #define bank accounts here\ninterestRate <- 0.0525;   \nhouse <- c(4.8, 3.8, 5.7); #deduct\nfood<- c(3.5, 4.3, 5.0);    #deduct\nfun <- c(7.8, 2.1, 10.5);  #deduct\n#and incomes (through TAships) of \nincome <- c(21, 21, 21); #add this\n\nbalance = matrix(NA,ncol=length(bankAccounts),nrow=6)\nbalance[1,] = bankAccounts\nfor(i in 1:5){\n  intbal = balance[i,]-house-food-fun+income\n  balance[i+1,] = intbal*interestRate + intbal\n  }\nbalance\n```\n\n### 7) Three students have estimated annual expenditures for food, housing, and fun of: (in thousands of dollars)\n```{r}\nbankAccounts <- c(10, 9.2, 5.6); #define bank accounts here\ninterestRate <- 0.0525;\nhouse <- c(4.8, 3.8, 5.7); \nfood<- c(3.5, 4.3, 5.0); \nfun <- c(7.8, 2.1, 10.5); \nincome <- c(21, 21, 21);\n\nbalance = matrix(NA,ncol=length(bankAccounts),nrow=7)\nrownames(balance) = 2014:2020\nbalance[1,] = bankAccounts\nfor(i in 1:6){\n  intbal = balance[i,]-house-food-fun+income\n  balance[i+1,] = intbal*interestRate + intbal\n  if(as.numeric(rownames(balance)[i+1])%%2==1){balance[i+1,c(1,3)] = balance[i+1,c(1,3)]+5}\n}\nbalance\n```\n\n### 8) use a while loop to sum all numbers from 1:17. You will need to use a counter variable (like index seen in class).\n```{r}\nres = numeric(length=17)\nx=0\nwhile(x<17){\n  x=x+1\n  res[x]=x\n  }\nres\nsum(res)\n```\n### 9) write a function takes a number, and prints ‘small’ if number less than or equal to -1; ‘medium’ if between -1 and + 1’big’ if greater than or equal to + 1\n```{r}\nnumberSizeEvaluator = function(x){\n  if(x<(-1)){\n    print('small')\n    } else {\n      if(x>1){print('big')\n        } else {\n          print('medium')\n          }\n      }\n  }\n# OR\nnumberSizeEvaluator = function(x){ifelse(x<(-1),'small',ifelse(x>1,'big','medium'))}\n  \nnumberSizeEvaluator(-2)\nnumberSizeEvaluator(-1)\nnumberSizeEvaluator(0)\nnumberSizeEvaluator(1)\nnumberSizeEvaluator(2)\n```\n",
    "created" : 1442510982843.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "905346893",
    "id" : "97B09A2E",
    "lastKnownWriteTime" : 1442510984,
    "path" : "C:/Users/Marcel/Dropbox/PhD/CLASSES/RbootCAMP_mcvaz/Exercise1/Ex1.Rmd",
    "project_path" : "Ex1.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}