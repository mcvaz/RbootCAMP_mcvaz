snpsDataFrame = read.table('hapmap_CEU_r23a_chr2_ld-1.txt',header=TRUE)
head(snpsDataFrame)
snps=as.matrix(snpsDataFrame)
snps
table(testSNP)
calc_freq=function(x){
return(sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x))))
}
calc_het=function(x){
return(sum(x==1,na.rm=TRUE)/(sum(!is.na(x))))
}
freq=apply(snps,1,calc_freq)
het=apply(snps,1,calc_het)
freq
plot(freq,het,xlab="Frequency",ylab="Heterozygosity")  # Scatter plot
snpsDataFrame = read.table('hapmap_CEU_r23a_chr2_ld-1.txt',header=TRUE)
snps=as.matrix(snpsDataFrame)
calc_freq=function(x){
return(sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x))))
}
calc_het=function(x){
return(sum(x==1,na.rm=TRUE)/(sum(!is.na(x))))
}
freq=apply(snps,1,calc_freq)
het=apply(snps,1,calc_het)
compute_chisquare=function(x){
freq=sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x)))
cnt0=sum(x==0,na.rm=TRUE)
cnt1=sum(x==1,na.rm=TRUE)
cnt2=sum(x==2,na.rm=TRUE)
obscnts=c(cnt0,cnt1,cnt2)
#print(obscnts)
n=sum(obscnts)
expcnts=c((1-freq)^2,2*freq*(1-freq),freq^2)*n
chisq=sum((obscnts-expcnts)^2/expcnts)
return(chisq)
}
chisqs=apply(snps,1,compute_chisquare)
pvals=pchisq(chisqs,1,lower.tail=FALSE)
pvals
sum(pvals<.05)
sum(pvals)
pvals<.05
sum(pvals<.05)/length(pvals)
sum(pvals<.05)/length(pvals)
sum(pvals<.01)/length(pvals)
sum(pvals<.001)/length(pvals)
snpsDataFrame = read.table('hapmap_CEU_r23a_chr2_ld-1.txt',header=TRUE)
snps=as.matrix(snpsDataFrame)
calc_freq=function(x){
return(sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x))))
}
calc_het=function(x){
return(sum(x==1,na.rm=TRUE)/(sum(!is.na(x))))
}
freq=apply(snps,1,calc_freq)
het=apply(snps,1,calc_het)
compute_chisquare=function(x){
freq=sum(x,na.rm=TRUE)/(2.0*sum(!is.na(x)))
cnt0=sum(x==0,na.rm=TRUE)
cnt1=sum(x==1,na.rm=TRUE)
cnt2=sum(x==2,na.rm=TRUE)
obscnts=c(cnt0,cnt1,cnt2)
#print(obscnts)
n=sum(obscnts)
expcnts=c((1-freq)^2,2*freq*(1-freq),freq^2)*n
chisq=sum((obscnts-expcnts)^2/expcnts)
return(chisq)
}
chisqs=apply(snps,1,compute_chisquare)
pvals=pchisq(chisqs,1,lower.tail=FALSE)
pvals
sum(pvals<.05)/length(pvals)
sum(pvals<.01)/length(pvals)
sum(pvals<.001)/length(pvals)
mean(pvals<signifthres)
mean(pvals<.05)
mean(pvals<.05)
mean(pvals<.01)
mean(pvals<.001)
length(pvals)
num_pval = length(pvals)
num_pval
pvals
1:num_pval
1:num_pval/num_pval
exp_pvals = 1:num_pval/num_pval
exp_pvals
?sort
sort_pvals = sort(pvals)
sort_pvals
-log10(sort_pvals)
round(-log10(sort_pvals),2)
log_sort_pvals = -log10(sort_pvals)
log_exp_pvals = -log10(exp_pvals)
plot(y=log_sort_pvals,x=log_exp_pvals)
plot(y=log_sort_pvals,x=log_exp_pvals,xlab="Expected p-values",ylab="Observed p-values")
line(a=0,b=1,col=2,lwd=2)
abline(a=0,b=1,col=2,lwd=2)
abline(a=0,b=1,col=2,lwd=2,lty=2)
plot(y=log_sort_pvals,x=log_exp_pvals,xlab="Expected p-values",ylab="Observed p-values")
abline(a=0,b=1,col=2,lwd=2,lty=2)
zz = read.table('pheno.sim.2014.txt',header=T,as.is=T,sep="\t")
zz = read.table('pheno.sim.2014-1.txt',header=T,as.is=T,sep="\t")
head(zz)
zz = read.table('pheno.sim.2014-1.txt',header=T,as.is=T,sep=";")
head(zz)
str(zz)
zz = read.table('pheno.sim.2014-1.txt',header=T,as.is=T,sep=" ")
str(zz)
head(zz)
quantile(zz,prob=.25)
?quantile
quantile(zz,probs=.25)
quantile(zz$glu,probs=.25)
quantile(zz$glu,probs=.75)
q25 = quantile(zz$glu,probs=.25)
zz[zz$glu<q25,]
q25
zz[zz$glu<q25,"Indiv"]
controls = zz[zz$glu<q25,"Indiv"]
q75 = quantile(zz$glu,probs=.75)
cases = zz[zz$glu>q75,"Indiv"]
curve(density(zz$glu))
density(zz$glu)
plot(density(zz$glu))
plot(density(zz$glu),xlab="Glucose levels")
plot(density(zz$glu),xlab="Glucose levels",main="")
abline(v=c(q25,q75),lty=2,col=2)
snpsDataFrame
head(snpsDataFrame)
snpsDataFrame['rs7584086_T',]
case_genotypes = snpsDataFrame['rs7584086_T',]
snpsDataFrame['rs7584086_T',]
snpsDataFrame['rs7584086_T',cases]
cases
case_genotypes = snpsDataFrame['rs7584086_T',cases]
control_genotypes = snpsDataFrame['rs7584086_T',control]
control_genotypes = snpsDataFrame['rs7584086_T',controls]
control_genotypes
table(control_genotypes)
table(case_genotypes)
class(case_genotypes)
class(control_genotypes)
control_genotypes
control_genotypes[1,]
class(control_genotypes[1,])
table(control_genotypes[1,])
table(as.vector(case_genotypes))
table(as.vector(control_genotypes))
control genotypes
control_genotypes
table(control_genotypes)
as.vector(case_genotypes)
class(as.vector(case_genotypes))
class(as.numeric(case_genotypes))
table(as.numeric(case_genotypes))
table(as.numeric(control_genotypes))
