{
    "contents" : "---\ntitle: \"Class 1 exercises\"\nauthor: \"M. Vaz\"\ndate: \"Wednesday, September 16, 2015\"\noutput: html_document\n---\n### Loading packages\n\n```{r}\nlibrary(ape)\nlibrary(geiger)\n```\n\n### Working directory\n```{r}\ngetwd()\n```\n\n### Comments\n```{r}\n2+2\n#2+3\n```\n\n\n### Help!\n```{r,eval=FALSE}\nhelp(sum)\n?xtabs\n??average\n```\n\n\n### Concatenating\n```{r}\nletters4 = c(\"a\",\"b\",\"c\",\"d\")\ncat(letters4,sep=\"\\n\")\n```\n\n\n### Installing packages\n```{r,eval=FALSE}\ninstall.packages(c(\"geiger\",\"laser\"),dep=T)\n```\n\n\n### Variables\n```{r}\nxx = 1000\nls()\nrm(xx)\nls()\nrm(list=ls())\nls()\n```\n\n### Quitting R\n```{r,eval=FALSE}\nq(save='no')\n```\n\n### Sourcing\n```{r}\nlist.files()\nsource('source.example.R')\nls()\nall.I.know.about.life.I.learned.in.grad.school()\n```\n\n### Reading tree\n```{r}\nlibrary(ape)\ntt = read.tree(\"tree.tre\")\ntt\nstr(tt)\nattributes(tt)\nplot(tt)\n```\n\n### Reading data\n```{r}\ndd = read.table(\"data.txt\",header=T,sep=\"\\t\",as.is=T)\nstr(dd)\ndim(dd)\nsize = runif(dim(dd)[1])\nhead(dd)\ndd = cbind(dd,size)\ntail(dd)\n```\n\n\n### Indexing\n```{r}\nnames(dd)\nhead(dd$species)\ntail(dd$species)\ndd[1,1]\ndd[1,2]\ndd[1,]\ndd[,1]\nhead(row.names(dd))\nrow.names(dd) = dd$species\nhead(row.names(dd))\nstr(dd)\ndd[5:10,]\nwhich(dd$mode=='MPF')\nmpf = which(dd$mode=='MPF')\nmpf_swimmers = dd[mpf,]\nhead(mpf_swimmers)\nbig.fish = dd[which(dd$size>.9),]\nhead(big.fish)\n```\n\n\n### NAs\n```{r}\nhead(dd)\ncleaned1 = dd[complete.cases(dd),]\ncleaned2 = na.omit(dd)\ndd = cleaned1\n```\n\n\n### Differences\n```{r}\nsetdiff(cleaned1,cleaned2)\nsetdiff(dd$species,tt$tip.label)\n```\n\n### Changing\n```{r}\ndd$species[which(dd$species==\"Chaetodon_plebius\")] = 'Chaetodon_plebeius'\n```\n\n### Matching\n```{r}\ndel_from_data = setdiff(dd$species, tt$tip.label)\ndel_from_data\nmatch(del_from_data,rownames(dd))\ndd.pruned = dd[match(del_from_data,rownames(dd)),]\nsetdiff(dd.pruned$species,tt$tip.label)\nnotindd = setdiff(tt$tip.label,dd.pruned$species)\nlength(notindd)\nhead(notindd)\n```\n\n### For\n```{r}\nfor(i in 1:5){cat('\\nthe number is',i)}\nnotfish = c(\"bat\", \"dolphin\", \"toad\", \"soldier\")\nfor(animal in notfish){cat(animal,\"fish\\n\",sep=\"\")}\n```\n\n### While\n```{r}\nxx=1\nwhile(xx<10){\n  #cat('value of xx',xx,'\\n')\n  xx = xx+1;\n  if(xx==7){cat('lucky number',xx,'\\n')}\n  else {cat('not excited about the number',xx,'\\n')}\n  }\nprint(xx)\n```\n\n### Pseudo-code\n```{r}\n## Goal: calculate the sum of all numbers from 1 to 20\n# 1. Create sequence from 1 to 20\nxx = 1:20\n# 2. Sum all these values\nsum(xx)\n\n## Goal: Graph population growth\n# 1. Set parameters: initial population (N), growth rate (r), and time steps (t)\nN = 100; r = 1.05; t = 10\n# 2.Population growth function\nr*N\n# 3. Project growth 10 time steps ahead\nfor(i in 1:t){N[i+1] = r*N[i]}\n# 4. Display result\nN\nplot(N,xlab=\"Time\",type=\"b\")\n```\n\n### Converting a script into a function\n```{r}\ngeomGrowth = function(Ni=100,r=1.05,t=10,plot=TRUE){\n  N = c(Ni,rep(NA,t))\n  for(i in 1:t){N[i+1] = r*N[i]}\n  if(plot){plot(N,xlab=\"Time\",type=\"l\")}\n  return(N)\n  }\ngeomGrowth(Ni=100,r=1.05,t=100)\n```\n\n### Sensitivity analysis\n```{r}\nrs = seq(.8,1.2,.05)\nres = matrix(NA,ncol=length(rs),nrow=101)\nfor(i in 1:length(rs)){\n  res[,i] = geomGrowth(Ni=100,r=rs[i],t=100,plot=F)  \n  }\ncols = rainbow(length(rs),alpha=.7)\nplot(1:10,xlim=c(0,150),ylim=range(res),type=\"n\",log='y',xlab=\"Time\",ylab=\"N\")\nfor(i in 1:length(rs)){lines(res[,i],col=cols[i])}\nlegend(115,119241953,rs,col=cols,bty=\"n\",lty=1,title=\"r\")\n```\n\n### ODE\n```{r}\n\n```",
    "created" : 1442422436118.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3159362143",
    "id" : "1980B352",
    "lastKnownWriteTime" : 1442444768,
    "path" : "C:/Users/Marcel/Dropbox/PhD/CLASSES/RbootCAMP_mcvaz/Class1/Class1.Rmd",
    "project_path" : "Class1.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}